{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALE\\\\roofing-crm-system\\\\roofing-crm-system\\\\frontend\\\\src\\\\ProjectsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsPage = ({\n  onSelectProject\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [staff, setStaff] = useState([]);\n  const assignStaff = async (projectId, assignedInspector, assignedEstimator, status) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/assign`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          assignedInspector,\n          assignedEstimator,\n          status\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setProjects(prev => prev.map(p => p.id === projectId ? result.project : p));\n      }\n    } catch (error) {\n      console.error(\"Assignment failed:\", error);\n    }\n  };\n  useEffect(() => {\n    Promise.all([fetch(\"http://localhost:5000/api/projects\").then(res => res.json()), fetch(\"http://localhost:5000/api/staff\").then(res => res.json())]).then(([projectsData, staffData]) => {\n      setProjects(projectsData.projects);\n      setStaff(staffData.staff);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Work Queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6 flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg\",\n            children: project.contractor.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Property:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 18\n            }, this), \" \", project.propertyAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectProject(project.id),\n          className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsPage, \"X1Grb/4YnxwNGiTXTh6BY69489s=\");\n_c = ProjectsPage;\nexport default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProjectsPage","onSelectProject","_s","projects","setProjects","loading","setLoading","staff","setStaff","assignStaff","projectId","assignedInspector","assignedEstimator","status","response","fetch","method","headers","body","JSON","stringify","ok","result","json","prev","map","p","id","project","error","console","Promise","all","then","res","projectsData","staffData","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contractor","companyName","propertyAddress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALE/roofing-crm-system/roofing-crm-system/frontend/src/ProjectsPage.tsx"],"sourcesContent":["interface ProjectsPageProps {\n  onSelectProject: (projectId: string) => void;\n}\n\nimport React, { useState, useEffect } from \"react\";\n\nconst ProjectsPage: React.FC<ProjectsPageProps> = ({ onSelectProject }) => {\n  const [projects, setProjects] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [staff, setStaff] = useState<any[]>([]);\n\n  const assignStaff = async (projectId: string, assignedInspector: string, assignedEstimator: string, status: string) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/projects/${projectId}/assign`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ assignedInspector, assignedEstimator, status })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setProjects(prev => prev.map(p => p.id === projectId ? result.project : p));\n      }\n    } catch (error) {\n      console.error(\"Assignment failed:\", error);\n    }\n  };\n\n  useEffect(() => {\n    Promise.all([\n      fetch(\"http://localhost:5000/api/projects\").then(res => res.json()),\n      fetch(\"http://localhost:5000/api/staff\").then(res => res.json())\n    ]).then(([projectsData, staffData]) => {\n      setProjects(projectsData.projects);\n      setStaff(staffData.staff);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) return <div className=\"p-8\">Loading...</div>;\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-2xl font-bold mb-6\">Work Queue</h1>\n      <div className=\"space-y-4\">\n        {projects.map(project => (\n          <div key={project.id} className=\"bg-white rounded-lg shadow p-6 flex justify-between items-start\">\n            <div>\n              <h2 className=\"font-bold text-lg\">{project.contractor.companyName}</h2>\n              <p><strong>Property:</strong> {project.propertyAddress}</p>\n            </div>\n            <button\n              onClick={() => onSelectProject(project.id)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n            >\n              View Details\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}