{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALE\\\\roofing-crm-system\\\\roofing-crm-system\\\\frontend\\\\src\\\\StripePaymentForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useStripe, useElements, CardElement, Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51S9wlCLKWVr7MJNFIl5pflt0OUsUdVspoQcCzePMgtB2z8g5jD0vLmE3i6QcONFANGHYMULawlh2MRUvUAR5Wd0F007XyeIC9R');\nconst PaymentForm = ({\n  amount,\n  projectData,\n  onSuccess,\n  onError\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [processing, setProcessing] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) return;\n    setProcessing(true);\n    const cardElement = elements.getElement(CardElement);\n    if (!cardElement) return;\n    try {\n      const response = await fetch('http://localhost:5000/api/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: amount,\n          projectData\n        })\n      });\n      const {\n        clientSecret: client_secret\n      } = await response.json();\n      const result = await stripe.confirmCardPayment(client_secret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: projectData.contractorCompany,\n            email: projectData.contactEmail\n          }\n        }\n      });\n      if (result.error) {\n        onError(result.error.message || 'Payment failed');\n      } else {\n        onSuccess();\n      }\n    } catch (error) {\n      onError('Payment processing error');\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold text-green-600\",\n        children: [\"$\", amount.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-medium mb-2\",\n        children: \"Card Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || processing,\n      className: \"w-full bg-green-600 text-white py-3 px-6 rounded font-medium disabled:bg-gray-400\",\n      children: processing ? 'Processing...' : `Pay $${amount.toLocaleString()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500 text-center\",\n      children: \"Test card: 4242 4242 4242 4242\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"E03Jqbv+tP9RpKDHeK5n2eyfxr8=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst StripePaymentForm = props => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(PaymentForm, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StripePaymentForm;\nexport default StripePaymentForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"StripePaymentForm\");","map":{"version":3,"names":["React","useState","useStripe","useElements","CardElement","Elements","loadStripe","jsxDEV","_jsxDEV","stripePromise","PaymentForm","amount","projectData","onSuccess","onError","_s","stripe","elements","processing","setProcessing","handleSubmit","event","preventDefault","cardElement","getElement","response","fetch","method","headers","body","JSON","stringify","clientSecret","client_secret","json","result","confirmCardPayment","payment_method","card","billing_details","name","contractorCompany","email","contactEmail","error","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","type","disabled","_c","StripePaymentForm","props","_c2","$RefreshReg$"],"sources":["C:/Users/ALE/roofing-crm-system/roofing-crm-system/frontend/src/StripePaymentForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  useStripe,\n  useElements,\n  CardElement,\n  Elements\n} from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_test_51S9wlCLKWVr7MJNFIl5pflt0OUsUdVspoQcCzePMgtB2z8g5jD0vLmE3i6QcONFANGHYMULawlh2MRUvUAR5Wd0F007XyeIC9R');\n\ninterface PaymentFormProps {\n  amount: number;\n  projectData: any;\n  onSuccess: () => void;\n  onError: (error: string) => void;\n}\n\nconst PaymentForm: React.FC<PaymentFormProps> = ({ amount, projectData, onSuccess, onError }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [processing, setProcessing] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) return;\n\n    setProcessing(true);\n\n    const cardElement = elements.getElement(CardElement);\n    if (!cardElement) return;\n\n    try {\n      const response = await fetch('http://localhost:5000/api/create-payment-intent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          amount: amount,\n          projectData\n        })\n      });\n\n      const { clientSecret: client_secret } = await response.json();\n\n      const result = await stripe.confirmCardPayment(client_secret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: projectData.contractorCompany,\n            email: projectData.contactEmail\n          }\n        }\n      });\n\n      if (result.error) {\n        onError(result.error.message || 'Payment failed');\n      } else {\n        onSuccess();\n      }\n    } catch (error) {\n      onError('Payment processing error');\n    }\n\n    setProcessing(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"bg-gray-50 p-4 rounded\">\n        <h3 className=\"font-bold mb-2\">Payment Details</h3>\n        <p className=\"text-2xl font-bold text-green-600\">\n          ${amount.toLocaleString()}\n        </p>\n      </div>\n      \n      <div className=\"border p-4 rounded\">\n        <label className=\"block font-medium mb-2\">Card Information</label>\n        <CardElement />\n      </div>\n\n      <button\n        type=\"submit\"\n        disabled={!stripe || processing}\n        className=\"w-full bg-green-600 text-white py-3 px-6 rounded font-medium disabled:bg-gray-400\"\n      >\n        {processing ? 'Processing...' : `Pay $${amount.toLocaleString()}`}\n      </button>\n\n      <p className=\"text-sm text-gray-500 text-center\">\n        Test card: 4242 4242 4242 4242\n      </p>\n    </form>\n  );\n};\n\nconst StripePaymentForm: React.FC<PaymentFormProps> = (props) => {\n  return (\n    <Elements stripe={stripePromise}>\n      <PaymentForm {...props} />\n    </Elements>\n  );\n};\n\nexport default StripePaymentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}