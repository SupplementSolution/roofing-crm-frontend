{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALE\\\\roofing-crm-system\\\\roofing-crm-system\\\\frontend\\\\src\\\\CompanyCamIntegration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyCamIntegration = ({\n  projectId\n}) => {\n  _s();\n  const [companyCamProjectId, setCompanyCamProjectId] = useState('');\n  const [syncing, setSyncing] = useState(false);\n  const handleSync = async () => {\n    if (!companyCamProjectId.trim()) {\n      alert('Please enter a CompanyCam Project ID');\n      return;\n    }\n    setSyncing(true);\n    try {\n      const response = await fetch('/api/projects/' + projectId + '/sync-companycam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          companyCamProjectId: companyCamProjectId.trim()\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        alert('Successfully synced ' + result.synced_photos + ' photos from CompanyCam!');\n        window.location.reload();\n      } else {\n        alert('Sync failed');\n      }\n    } catch (error) {\n      alert('Failed to connect to CompanyCam');\n    } finally {\n      setSyncing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 bg-white rounded-lg shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-bold mb-4\",\n      children: \"CompanyCam Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyCamProjectId,\n        onChange: e => setCompanyCamProjectId(e.target.value),\n        placeholder: \"Enter CompanyCam project ID\",\n        className: \"w-full px-3 py-2 border rounded\",\n        disabled: syncing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        disabled: syncing || !companyCamProjectId.trim(),\n        className: \"px-6 py-2 bg-blue-600 text-white rounded disabled:bg-gray-300\",\n        children: syncing ? 'Syncing...' : 'Sync Photos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyCamIntegration, \"6/DIKYoKOcHc/0ofV/e5yuth97g=\");\n_c = CompanyCamIntegration;\nexport default CompanyCamIntegration;\nvar _c;\n$RefreshReg$(_c, \"CompanyCamIntegration\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CompanyCamIntegration","projectId","_s","companyCamProjectId","setCompanyCamProjectId","syncing","setSyncing","handleSync","trim","alert","response","fetch","method","headers","body","JSON","stringify","ok","result","json","synced_photos","window","location","reload","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALE/roofing-crm-system/roofing-crm-system/frontend/src/CompanyCamIntegration.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface CompanyCamIntegrationProps {\n  projectId: string;\n}\n\nconst CompanyCamIntegration: React.FC<CompanyCamIntegrationProps> = ({ projectId }) => {\n  const [companyCamProjectId, setCompanyCamProjectId] = useState('');\n  const [syncing, setSyncing] = useState(false);\n\n  const handleSync = async () => {\n    if (!companyCamProjectId.trim()) {\n      alert('Please enter a CompanyCam Project ID');\n      return;\n    }\n\n    setSyncing(true);\n    \n    try {\n      const response = await fetch('/api/projects/' + projectId + '/sync-companycam', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ companyCamProjectId: companyCamProjectId.trim() })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        alert('Successfully synced ' + result.synced_photos + ' photos from CompanyCam!');\n        window.location.reload();\n      } else {\n        alert('Sync failed');\n      }\n    } catch (error) {\n      alert('Failed to connect to CompanyCam');\n    } finally {\n      setSyncing(false);\n    }\n  };\n\n  return (\n    <div className=\"mt-6 bg-white rounded-lg shadow p-6\">\n      <h2 className=\"font-bold mb-4\">CompanyCam Integration</h2>\n      <div className=\"space-y-4\">\n        <input\n          type=\"text\"\n          value={companyCamProjectId}\n          onChange={(e) => setCompanyCamProjectId(e.target.value)}\n          placeholder=\"Enter CompanyCam project ID\"\n          className=\"w-full px-3 py-2 border rounded\"\n          disabled={syncing}\n        />\n        <button\n          onClick={handleSync}\n          disabled={syncing || !companyCamProjectId.trim()}\n          className=\"px-6 py-2 bg-blue-600 text-white rounded disabled:bg-gray-300\"\n        >\n          {syncing ? 'Syncing...' : 'Sync Photos'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyCamIntegration;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,qBAA2D,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACJ,mBAAmB,CAACK,IAAI,CAAC,CAAC,EAAE;MAC/BC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEAH,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,GAAGV,SAAS,GAAG,kBAAkB,EAAE;QAC9EW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,mBAAmB,EAAEA,mBAAmB,CAACK,IAAI,CAAC;QAAE,CAAC;MAC1E,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpCV,KAAK,CAAC,sBAAsB,GAAGS,MAAM,CAACE,aAAa,GAAG,0BAA0B,CAAC;QACjFC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLd,KAAK,CAAC,aAAa,CAAC;MACtB;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdf,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAK0B,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAClD3B,OAAA;MAAI0B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1D/B,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB3B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE7B,mBAAoB;QAC3B8B,QAAQ,EAAGC,CAAC,IAAK9B,sBAAsB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxDI,WAAW,EAAC,6BAA6B;QACzCX,SAAS,EAAC,iCAAiC;QAC3CY,QAAQ,EAAEhC;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF/B,OAAA;QACEuC,OAAO,EAAE/B,UAAW;QACpB8B,QAAQ,EAAEhC,OAAO,IAAI,CAACF,mBAAmB,CAACK,IAAI,CAAC,CAAE;QACjDiB,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAExErB,OAAO,GAAG,YAAY,GAAG;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAvDIF,qBAA2D;AAAAuC,EAAA,GAA3DvC,qBAA2D;AAyDjE,eAAeA,qBAAqB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}